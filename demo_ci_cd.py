#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞–±–æ—Ç—ã CI/CD
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

import os
import sys
import subprocess
import time
from datetime import datetime

def print_header(title):
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("\n" + "="*60)
    print(f"  {title}")
    print("="*60)

def print_step(step, description):
    """–ü–µ—á–∞—Ç–∞–µ—Ç —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    print(f"\nüîß –®–∞–≥ {step}: {description}")
    print("-" * 40)

def run_command(command, description=""):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    if description:
        print(f"   {description}")
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {result.stdout.strip()}")
            return True
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def simulate_development_workflow():
    """–ò–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
    
    print_header("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø CI/CD WORKFLOW")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª CI/CD –¥–ª—è Django Blog Application")
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print_step(1, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    
    commands = [
        ("python --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"),
        ("pip --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ pip"),
        ("git --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Git"),
    ]
    
    for cmd, desc in commands:
        run_command(cmd, desc)
    
    # –®–∞–≥ 2: –ò–º–∏—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è feature –≤–µ—Ç–∫–∏
    print_step(2, "–°–æ–∑–¥–∞–Ω–∏–µ feature –≤–µ—Ç–∫–∏ –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
    
    print("   üìù –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏...")
    print("   git checkout -b feature/new-blog-feature")
    print("   ‚úÖ Feature –≤–µ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
    
    # –®–∞–≥ 3: –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    print_step(3, "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
    
    print("   üìù –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª...")
    print("   - –ù–æ–≤—ã–µ —Ç–µ—Å—Ç—ã")
    print("   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π")
    print("   - –ù–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è")
    print("   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤")
    print("   ‚úÖ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    # –®–∞–≥ 4: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    print_step(4, "–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    print("   üß™ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤...")
    success = run_command("python manage.py test", "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ Django")
    
    if success:
        print("   ‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("   ‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("   üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏...")
        print("   ‚úÖ –û—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
    # –®–∞–≥ 5: –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
    print_step(5, "–ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    
    print("   üì¶ –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ Git...")
    print("   git add .")
    print("   git commit -m 'Add new blog feature with tests'")
    print("   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã")
    
    # –®–∞–≥ 6: Push –≤ GitHub
    print_step(6, "–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub")
    
    print("   üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub...")
    print("   git push origin feature/new-blog-feature")
    print("   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub")
    
    # –®–∞–≥ 7: –°–æ–∑–¥–∞–Ω–∏–µ Pull Request
    print_step(7, "–°–æ–∑–¥–∞–Ω–∏–µ Pull Request")
    
    print("   üìã –°–æ–∑–¥–∞–µ–º Pull Request...")
    print("   - –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ GitHub UI")
    print("   - –°–æ–∑–¥–∞–µ–º PR –∏–∑ feature/new-blog-feature –≤ dev")
    print("   - –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    print("   ‚úÖ Pull Request —Å–æ–∑–¥–∞–Ω")
    
    # –®–∞–≥ 8: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ CI
    print_step(8, "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ CI Pipeline")
    
    print("   üîÑ GitHub webhook –∑–∞–ø—É—Å–∫–∞–µ—Ç Jenkins...")
    print("   üìä Jenkins –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("     1. Checkout –∫–æ–¥–∞ –∏–∑ GitHub")
    print("     2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    print("     3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("     4. –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤")
    print("     5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞")
    print("     6. –°–±–æ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
    print("   ‚úÖ CI Pipeline –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    
    # –®–∞–≥ 9: Code Review
    print_step(9, "Code Review")
    
    print("   üë• –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç Code Review...")
    print("   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º")
    print("   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏")
    print("   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    print("   ‚úÖ Code Review –ø—Ä–æ–π–¥–µ–Ω")
    
    # –®–∞–≥ 10: Merge –≤ dev
    print_step(10, "–°–ª–∏—è–Ω–∏–µ –≤ dev –≤–µ—Ç–∫—É")
    
    print("   üîÄ –°–ª–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ dev...")
    print("   - Jenkins –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã")
    print("   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–ª–∏—è–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫")
    print("   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
    print("   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–ª–∏—Ç—ã –≤ dev")
    
    # –®–∞–≥ 11: –î–µ–ø–ª–æ–π –≤ staging
    print_step(11, "–î–µ–ø–ª–æ–π –≤ staging –æ–∫—Ä—É–∂–µ–Ω–∏–µ")
    
    print("   üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –≤ staging...")
    print("   - Jenkins —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    print("   - –ó–∞–ø—É—Å–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤")
    print("   - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏")
    print("   ‚úÖ Staging –¥–µ–ø–ª–æ–π —É—Å–ø–µ—à–µ–Ω")
    
    # –®–∞–≥ 12: –†–µ–ª–∏–∑ –≤ production
    print_step(12, "–†–µ–ª–∏–∑ –≤ production")
    
    print("   üéâ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–µ–ª–∏–∑—É –≤ production...")
    print("   - –°–æ–∑–¥–∞–Ω–∏–µ Pull Request –∏–∑ dev –≤ main")
    print("   - –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("   - –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ —Ä–µ–ª–∏–∑–∞")
    print("   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –≤ production")
    print("   ‚úÖ –†–µ–ª–∏–∑ –≤ production —É—Å–ø–µ—à–µ–Ω!")
    
    print_header("üéä –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("CI/CD –ø—Ä–æ—Ü–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
    print("\nüìã –ß—Ç–æ –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ:")
    print("   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ feature –≤–µ—Ç–∫–∏")
    print("   ‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("   ‚úÖ –ö–æ–º–º–∏—Ç –∏ push –≤ GitHub")
    print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ CI —á–µ—Ä–µ–∑ webhook")
    print("   ‚úÖ Code Review –ø—Ä–æ—Ü–µ—Å—Å")
    print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–ª–∏—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–æ–∫")
    print("   ‚úÖ –î–µ–ø–ª–æ–π –≤ staging –∏ production")
    print("   ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–µ")

def show_ci_cd_benefits():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ CI/CD"""
    
    print_header("üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê CI/CD")
    
    benefits = [
        "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Ä—É—á–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
        "‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º",
        "üîí –ö–∞—á–µ—Å—Ç–≤–æ: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–∞–∂–¥–æ–º –∫–æ–º–º–∏—Ç–µ",
        "üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –†–∞–Ω–Ω–µ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º",
        "üìä –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å: –í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã",
        "üîÑ –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è",
        "üí∞ –≠–∫–æ–Ω–æ–º–∏—è: –°–Ω–∏–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫",
        "üë• –ö–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è: –£–ª—É—á—à–µ–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –≤ –∫–æ–º–∞–Ω–¥–µ"
    ]
    
    for benefit in benefits:
        print(f"   {benefit}")
    
    print("\nüìà –ú–µ—Ç—Ä–∏–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è:")
    print("   ‚Ä¢ –í—Ä–µ–º—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: -80%")
    print("   ‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ –¥–µ–ø–ª–æ—è: +200%")
    print("   ‚Ä¢ –í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: -90%")
    print("   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–æ–≤ –≤ production: -60%")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é CI/CD!")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∂–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª Continuous Integration/Continuous Deployment")
    
    while True:
        print("\n" + "="*60)
        print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é CI/CD workflow")
        print("2. üí° –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ CI/CD")
        print("3. üìö –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
        print("4. ‚ùå –í—ã—Ö–æ–¥")
        print("="*60)
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
        
        if choice == "1":
            simulate_development_workflow()
        elif choice == "2":
            show_ci_cd_benefits()
        elif choice == "3":
            print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
            print("   ‚Ä¢ GITHUB_SETUP.md - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
            print("   ‚Ä¢ JENKINS_SETUP.md - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Jenkins")
            print("   ‚Ä¢ README.md - –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞")
            print("   ‚Ä¢ Jenkinsfile - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è CI/CD pipeline")
        elif choice == "4":
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main()
